//****************************************************************
//  (Partially) Generated by:  ToTypeScriptD
//  Website:       http://github.com/ToTypeScriptD/ToTypeScriptD
//  Version:       v0.1.5081.42854 - SHA1:66c203d - Debug
//  Date:          12/28/2016 8:19:48 PM
//
//  Assemblies:
//    System.Drawing.dll
//
//****************************************************************



declare module System.Drawing {

    export interface Bitmap {
    }

    export interface BitmapSuffixInSameAssemblyAttribute {
    }

    export interface BitmapSuffixInSatelliteAssemblyAttribute {
    }

    export interface Brush {
        NativeBrush: number;
    }

    export interface Brushes {
        Transparent: System.Drawing.Brush;
        AliceBlue: System.Drawing.Brush;
        AntiqueWhite: System.Drawing.Brush;
        Aqua: System.Drawing.Brush;
        Aquamarine: System.Drawing.Brush;
        Azure: System.Drawing.Brush;
        Beige: System.Drawing.Brush;
        Bisque: System.Drawing.Brush;
        Black: System.Drawing.Brush;
        BlanchedAlmond: System.Drawing.Brush;
        Blue: System.Drawing.Brush;
        BlueViolet: System.Drawing.Brush;
        Brown: System.Drawing.Brush;
        BurlyWood: System.Drawing.Brush;
        CadetBlue: System.Drawing.Brush;
        Chartreuse: System.Drawing.Brush;
        Chocolate: System.Drawing.Brush;
        Coral: System.Drawing.Brush;
        CornflowerBlue: System.Drawing.Brush;
        Cornsilk: System.Drawing.Brush;
        Crimson: System.Drawing.Brush;
        Cyan: System.Drawing.Brush;
        DarkBlue: System.Drawing.Brush;
        DarkCyan: System.Drawing.Brush;
        DarkGoldenrod: System.Drawing.Brush;
        DarkGray: System.Drawing.Brush;
        DarkGreen: System.Drawing.Brush;
        DarkKhaki: System.Drawing.Brush;
        DarkMagenta: System.Drawing.Brush;
        DarkOliveGreen: System.Drawing.Brush;
        DarkOrange: System.Drawing.Brush;
        DarkOrchid: System.Drawing.Brush;
        DarkRed: System.Drawing.Brush;
        DarkSalmon: System.Drawing.Brush;
        DarkSeaGreen: System.Drawing.Brush;
        DarkSlateBlue: System.Drawing.Brush;
        DarkSlateGray: System.Drawing.Brush;
        DarkTurquoise: System.Drawing.Brush;
        DarkViolet: System.Drawing.Brush;
        DeepPink: System.Drawing.Brush;
        DeepSkyBlue: System.Drawing.Brush;
        DimGray: System.Drawing.Brush;
        DodgerBlue: System.Drawing.Brush;
        Firebrick: System.Drawing.Brush;
        FloralWhite: System.Drawing.Brush;
        ForestGreen: System.Drawing.Brush;
        Fuchsia: System.Drawing.Brush;
        Gainsboro: System.Drawing.Brush;
        GhostWhite: System.Drawing.Brush;
        Gold: System.Drawing.Brush;
        Goldenrod: System.Drawing.Brush;
        Gray: System.Drawing.Brush;
        Green: System.Drawing.Brush;
        GreenYellow: System.Drawing.Brush;
        Honeydew: System.Drawing.Brush;
        HotPink: System.Drawing.Brush;
        IndianRed: System.Drawing.Brush;
        Indigo: System.Drawing.Brush;
        Ivory: System.Drawing.Brush;
        Khaki: System.Drawing.Brush;
        Lavender: System.Drawing.Brush;
        LavenderBlush: System.Drawing.Brush;
        LawnGreen: System.Drawing.Brush;
        LemonChiffon: System.Drawing.Brush;
        LightBlue: System.Drawing.Brush;
        LightCoral: System.Drawing.Brush;
        LightCyan: System.Drawing.Brush;
        LightGoldenrodYellow: System.Drawing.Brush;
        LightGreen: System.Drawing.Brush;
        LightGray: System.Drawing.Brush;
        LightPink: System.Drawing.Brush;
        LightSalmon: System.Drawing.Brush;
        LightSeaGreen: System.Drawing.Brush;
        LightSkyBlue: System.Drawing.Brush;
        LightSlateGray: System.Drawing.Brush;
        LightSteelBlue: System.Drawing.Brush;
        LightYellow: System.Drawing.Brush;
        Lime: System.Drawing.Brush;
        LimeGreen: System.Drawing.Brush;
        Linen: System.Drawing.Brush;
        Magenta: System.Drawing.Brush;
        Maroon: System.Drawing.Brush;
        MediumAquamarine: System.Drawing.Brush;
        MediumBlue: System.Drawing.Brush;
        MediumOrchid: System.Drawing.Brush;
        MediumPurple: System.Drawing.Brush;
        MediumSeaGreen: System.Drawing.Brush;
        MediumSlateBlue: System.Drawing.Brush;
        MediumSpringGreen: System.Drawing.Brush;
        MediumTurquoise: System.Drawing.Brush;
        MediumVioletRed: System.Drawing.Brush;
        MidnightBlue: System.Drawing.Brush;
        MintCream: System.Drawing.Brush;
        MistyRose: System.Drawing.Brush;
        Moccasin: System.Drawing.Brush;
        NavajoWhite: System.Drawing.Brush;
        Navy: System.Drawing.Brush;
        OldLace: System.Drawing.Brush;
        Olive: System.Drawing.Brush;
        OliveDrab: System.Drawing.Brush;
        Orange: System.Drawing.Brush;
        OrangeRed: System.Drawing.Brush;
        Orchid: System.Drawing.Brush;
        PaleGoldenrod: System.Drawing.Brush;
        PaleGreen: System.Drawing.Brush;
        PaleTurquoise: System.Drawing.Brush;
        PaleVioletRed: System.Drawing.Brush;
        PapayaWhip: System.Drawing.Brush;
        PeachPuff: System.Drawing.Brush;
        Peru: System.Drawing.Brush;
        Pink: System.Drawing.Brush;
        Plum: System.Drawing.Brush;
        PowderBlue: System.Drawing.Brush;
        Purple: System.Drawing.Brush;
        Red: System.Drawing.Brush;
        RosyBrown: System.Drawing.Brush;
        RoyalBlue: System.Drawing.Brush;
        SaddleBrown: System.Drawing.Brush;
        Salmon: System.Drawing.Brush;
        SandyBrown: System.Drawing.Brush;
        SeaGreen: System.Drawing.Brush;
        SeaShell: System.Drawing.Brush;
        Sienna: System.Drawing.Brush;
        Silver: System.Drawing.Brush;
        SkyBlue: System.Drawing.Brush;
        SlateBlue: System.Drawing.Brush;
        SlateGray: System.Drawing.Brush;
        Snow: System.Drawing.Brush;
        SpringGreen: System.Drawing.Brush;
        SteelBlue: System.Drawing.Brush;
        Tan: System.Drawing.Brush;
        Teal: System.Drawing.Brush;
        Thistle: System.Drawing.Brush;
        Tomato: System.Drawing.Brush;
        Turquoise: System.Drawing.Brush;
        Violet: System.Drawing.Brush;
        Wheat: System.Drawing.Brush;
        White: System.Drawing.Brush;
        WhiteSmoke: System.Drawing.Brush;
        Yellow: System.Drawing.Brush;
        YellowGreen: System.Drawing.Brush;
    }

    export interface BufferedGraphics {
        DisposeContext: boolean;
        Graphics: System.Drawing.Graphics;
    }

    export interface BufferedGraphicsContext {
        DoubleBuffering: any; // System.Diagnostics.TraceSwitch
        MaximumBuffer: System.Drawing.Size;
    }

    export interface BufferedGraphicsManager {
        Current: System.Drawing.BufferedGraphicsContext;
    }

    export interface CharacterRange {
        First: number;
        Length: number;
    }

    export interface Color {
        Empty: System.Drawing.Color;
        Transparent: System.Drawing.Color;
        AliceBlue: System.Drawing.Color;
        AntiqueWhite: System.Drawing.Color;
        Aqua: System.Drawing.Color;
        Aquamarine: System.Drawing.Color;
        Azure: System.Drawing.Color;
        Beige: System.Drawing.Color;
        Bisque: System.Drawing.Color;
        Black: System.Drawing.Color;
        BlanchedAlmond: System.Drawing.Color;
        Blue: System.Drawing.Color;
        BlueViolet: System.Drawing.Color;
        Brown: System.Drawing.Color;
        BurlyWood: System.Drawing.Color;
        CadetBlue: System.Drawing.Color;
        Chartreuse: System.Drawing.Color;
        Chocolate: System.Drawing.Color;
        Coral: System.Drawing.Color;
        CornflowerBlue: System.Drawing.Color;
        Cornsilk: System.Drawing.Color;
        Crimson: System.Drawing.Color;
        Cyan: System.Drawing.Color;
        DarkBlue: System.Drawing.Color;
        DarkCyan: System.Drawing.Color;
        DarkGoldenrod: System.Drawing.Color;
        DarkGray: System.Drawing.Color;
        DarkGreen: System.Drawing.Color;
        DarkKhaki: System.Drawing.Color;
        DarkMagenta: System.Drawing.Color;
        DarkOliveGreen: System.Drawing.Color;
        DarkOrange: System.Drawing.Color;
        DarkOrchid: System.Drawing.Color;
        DarkRed: System.Drawing.Color;
        DarkSalmon: System.Drawing.Color;
        DarkSeaGreen: System.Drawing.Color;
        DarkSlateBlue: System.Drawing.Color;
        DarkSlateGray: System.Drawing.Color;
        DarkTurquoise: System.Drawing.Color;
        DarkViolet: System.Drawing.Color;
        DeepPink: System.Drawing.Color;
        DeepSkyBlue: System.Drawing.Color;
        DimGray: System.Drawing.Color;
        DodgerBlue: System.Drawing.Color;
        Firebrick: System.Drawing.Color;
        FloralWhite: System.Drawing.Color;
        ForestGreen: System.Drawing.Color;
        Fuchsia: System.Drawing.Color;
        Gainsboro: System.Drawing.Color;
        GhostWhite: System.Drawing.Color;
        Gold: System.Drawing.Color;
        Goldenrod: System.Drawing.Color;
        Gray: System.Drawing.Color;
        Green: System.Drawing.Color;
        GreenYellow: System.Drawing.Color;
        Honeydew: System.Drawing.Color;
        HotPink: System.Drawing.Color;
        IndianRed: System.Drawing.Color;
        Indigo: System.Drawing.Color;
        Ivory: System.Drawing.Color;
        Khaki: System.Drawing.Color;
        Lavender: System.Drawing.Color;
        LavenderBlush: System.Drawing.Color;
        LawnGreen: System.Drawing.Color;
        LemonChiffon: System.Drawing.Color;
        LightBlue: System.Drawing.Color;
        LightCoral: System.Drawing.Color;
        LightCyan: System.Drawing.Color;
        LightGoldenrodYellow: System.Drawing.Color;
        LightGreen: System.Drawing.Color;
        LightGray: System.Drawing.Color;
        LightPink: System.Drawing.Color;
        LightSalmon: System.Drawing.Color;
        LightSeaGreen: System.Drawing.Color;
        LightSkyBlue: System.Drawing.Color;
        LightSlateGray: System.Drawing.Color;
        LightSteelBlue: System.Drawing.Color;
        LightYellow: System.Drawing.Color;
        Lime: System.Drawing.Color;
        LimeGreen: System.Drawing.Color;
        Linen: System.Drawing.Color;
        Magenta: System.Drawing.Color;
        Maroon: System.Drawing.Color;
        MediumAquamarine: System.Drawing.Color;
        MediumBlue: System.Drawing.Color;
        MediumOrchid: System.Drawing.Color;
        MediumPurple: System.Drawing.Color;
        MediumSeaGreen: System.Drawing.Color;
        MediumSlateBlue: System.Drawing.Color;
        MediumSpringGreen: System.Drawing.Color;
        MediumTurquoise: System.Drawing.Color;
        MediumVioletRed: System.Drawing.Color;
        MidnightBlue: System.Drawing.Color;
        MintCream: System.Drawing.Color;
        MistyRose: System.Drawing.Color;
        Moccasin: System.Drawing.Color;
        NavajoWhite: System.Drawing.Color;
        Navy: System.Drawing.Color;
        OldLace: System.Drawing.Color;
        Olive: System.Drawing.Color;
        OliveDrab: System.Drawing.Color;
        Orange: System.Drawing.Color;
        OrangeRed: System.Drawing.Color;
        Orchid: System.Drawing.Color;
        PaleGoldenrod: System.Drawing.Color;
        PaleGreen: System.Drawing.Color;
        PaleTurquoise: System.Drawing.Color;
        PaleVioletRed: System.Drawing.Color;
        PapayaWhip: System.Drawing.Color;
        PeachPuff: System.Drawing.Color;
        Peru: System.Drawing.Color;
        Pink: System.Drawing.Color;
        Plum: System.Drawing.Color;
        PowderBlue: System.Drawing.Color;
        Purple: System.Drawing.Color;
        Red: System.Drawing.Color;
        RosyBrown: System.Drawing.Color;
        RoyalBlue: System.Drawing.Color;
        SaddleBrown: System.Drawing.Color;
        Salmon: System.Drawing.Color;
        SandyBrown: System.Drawing.Color;
        SeaGreen: System.Drawing.Color;
        SeaShell: System.Drawing.Color;
        Sienna: System.Drawing.Color;
        Silver: System.Drawing.Color;
        SkyBlue: System.Drawing.Color;
        SlateBlue: System.Drawing.Color;
        SlateGray: System.Drawing.Color;
        Snow: System.Drawing.Color;
        SpringGreen: System.Drawing.Color;
        SteelBlue: System.Drawing.Color;
        Tan: System.Drawing.Color;
        Teal: System.Drawing.Color;
        Thistle: System.Drawing.Color;
        Tomato: System.Drawing.Color;
        Turquoise: System.Drawing.Color;
        Violet: System.Drawing.Color;
        Wheat: System.Drawing.Color;
        White: System.Drawing.Color;
        WhiteSmoke: System.Drawing.Color;
        Yellow: System.Drawing.Color;
        YellowGreen: System.Drawing.Color;
        R: number;
        G: number;
        B: number;
        A: number;
        IsKnownColor: boolean;
        IsEmpty: boolean;
        IsNamedColor: boolean;
        IsSystemColor: boolean;
        NameAndARGBValue: string;
        Name: string;
        Value: number;
    }

    export interface ColorConverter {
        Colors: any; // System.Collections.Hashtable
        SystemColors: any; // System.Collections.Hashtable
    }

    export interface ColorTranslator {
    }

    enum ContentAlignment {
        TopLeft,
        TopCenter,
        TopRight,
        MiddleLeft,
        MiddleCenter,
        MiddleRight,
        BottomLeft,
        BottomCenter,
        BottomRight
    }

    enum CopyPixelOperation {
        NoMirrorBitmap,
        Blackness,
        NotSourceErase,
        NotSourceCopy,
        SourceErase,
        DestinationInvert,
        PatInvert,
        SourceInvert,
        SourceAnd,
        MergePaint,
        MergeCopy,
        SourceCopy,
        SourcePaint,
        PatCopy,
        PatPaint,
        Whiteness,
        CaptureBlt
    }

    export interface Font {
        NativeFont: number;
        FontFamily: System.Drawing.FontFamily;
        Bold: boolean;
        GdiCharSet: number;
        GdiVerticalFont: boolean;
        Italic: boolean;
        Name: string;
        OriginalFontName: string;
        Strikeout: boolean;
        Underline: boolean;
        Style: System.Drawing.FontStyle;
        Size: number;
        SizeInPoints: number;
        Unit: System.Drawing.GraphicsUnit;
        Height: number;
        IsSystemFont: boolean;
        SystemFontName: string;
    }

    export interface FontConverter {
    }

    export interface FontConverter_FontNameConverter {
    }

    export interface FontConverter_FontUnitConverter {
    }

    export interface FontFamily {
        NativeFamily: number;
        CurrentLanguage: number;
        Name: string;
        Families: System.Drawing.FontFamily[];
        GenericSansSerif: System.Drawing.FontFamily;
        GenericSerif: System.Drawing.FontFamily;
        GenericMonospace: System.Drawing.FontFamily;
    }

    enum FontStyle {
        Regular,
        Bold,
        Italic,
        Underline,
        Strikeout
    }

    export interface Graphics {
        NativeGraphics: number;
        CompositingMode: System.Drawing.Drawing2D.CompositingMode;
        RenderingOrigin: System.Drawing.Point;
        CompositingQuality: System.Drawing.Drawing2D.CompositingQuality;
        TextRenderingHint: System.Drawing.Text.TextRenderingHint;
        TextContrast: number;
        SmoothingMode: System.Drawing.Drawing2D.SmoothingMode;
        PixelOffsetMode: System.Drawing.Drawing2D.PixelOffsetMode;
        PrintingHelper: any;
        InterpolationMode: System.Drawing.Drawing2D.InterpolationMode;
        Transform: System.Drawing.Drawing2D.Matrix;
        PageUnit: System.Drawing.GraphicsUnit;
        PageScale: number;
        DpiX: number;
        DpiY: number;
        Clip: System.Drawing.Region;
        ClipBounds: System.Drawing.RectangleF;
        IsClipEmpty: boolean;
        VisibleClipBounds: System.Drawing.RectangleF;
        IsVisibleClipEmpty: boolean;
    }

    export interface Graphics_DrawImageAbort {
    }

    export interface Graphics_EnumerateMetafileProc {
    }

    enum GraphicsUnit {
        World,
        Display,
        Pixel,
        Point,
        Inch,
        Document,
        Millimeter
    }

    export interface Icon {
        Handle: number;
        Height: number;
        Size: System.Drawing.Size;
        Width: number;
    }

    export interface IconConverter {
    }

    export interface IDeviceContext {
    }

    export interface Image {
        Tag: any;
        PhysicalDimension: System.Drawing.SizeF;
        Size: System.Drawing.Size;
        Width: number;
        Height: number;
        HorizontalResolution: number;
        VerticalResolution: number;
        Flags: number;
        RawFormat: System.Drawing.Imaging.ImageFormat;
        PixelFormat: System.Drawing.Imaging.PixelFormat;
        Palette: System.Drawing.Imaging.ColorPalette;
        FrameDimensionsList: string[];
        PropertyIdList: number[];
        PropertyItems: System.Drawing.Imaging.PropertyItem[];
    }

    export interface Image_GetThumbnailImageAbort {
    }

    export interface ImageAnimator {
    }

    export interface ImageConverter {
    }

    export interface ImageFormatConverter {
    }

    enum KnownColor {
        ActiveBorder,
        ActiveCaption,
        ActiveCaptionText,
        AppWorkspace,
        Control,
        ControlDark,
        ControlDarkDark,
        ControlLight,
        ControlLightLight,
        ControlText,
        Desktop,
        GrayText,
        Highlight,
        HighlightText,
        HotTrack,
        InactiveBorder,
        InactiveCaption,
        InactiveCaptionText,
        Info,
        InfoText,
        Menu,
        MenuText,
        ScrollBar,
        Window,
        WindowFrame,
        WindowText,
        Transparent,
        AliceBlue,
        AntiqueWhite,
        Aqua,
        Aquamarine,
        Azure,
        Beige,
        Bisque,
        Black,
        BlanchedAlmond,
        Blue,
        BlueViolet,
        Brown,
        BurlyWood,
        CadetBlue,
        Chartreuse,
        Chocolate,
        Coral,
        CornflowerBlue,
        Cornsilk,
        Crimson,
        Cyan,
        DarkBlue,
        DarkCyan,
        DarkGoldenrod,
        DarkGray,
        DarkGreen,
        DarkKhaki,
        DarkMagenta,
        DarkOliveGreen,
        DarkOrange,
        DarkOrchid,
        DarkRed,
        DarkSalmon,
        DarkSeaGreen,
        DarkSlateBlue,
        DarkSlateGray,
        DarkTurquoise,
        DarkViolet,
        DeepPink,
        DeepSkyBlue,
        DimGray,
        DodgerBlue,
        Firebrick,
        FloralWhite,
        ForestGreen,
        Fuchsia,
        Gainsboro,
        GhostWhite,
        Gold,
        Goldenrod,
        Gray,
        Green,
        GreenYellow,
        Honeydew,
        HotPink,
        IndianRed,
        Indigo,
        Ivory,
        Khaki,
        Lavender,
        LavenderBlush,
        LawnGreen,
        LemonChiffon,
        LightBlue,
        LightCoral,
        LightCyan,
        LightGoldenrodYellow,
        LightGray,
        LightGreen,
        LightPink,
        LightSalmon,
        LightSeaGreen,
        LightSkyBlue,
        LightSlateGray,
        LightSteelBlue,
        LightYellow,
        Lime,
        LimeGreen,
        Linen,
        Magenta,
        Maroon,
        MediumAquamarine,
        MediumBlue,
        MediumOrchid,
        MediumPurple,
        MediumSeaGreen,
        MediumSlateBlue,
        MediumSpringGreen,
        MediumTurquoise,
        MediumVioletRed,
        MidnightBlue,
        MintCream,
        MistyRose,
        Moccasin,
        NavajoWhite,
        Navy,
        OldLace,
        Olive,
        OliveDrab,
        Orange,
        OrangeRed,
        Orchid,
        PaleGoldenrod,
        PaleGreen,
        PaleTurquoise,
        PaleVioletRed,
        PapayaWhip,
        PeachPuff,
        Peru,
        Pink,
        Plum,
        PowderBlue,
        Purple,
        Red,
        RosyBrown,
        RoyalBlue,
        SaddleBrown,
        Salmon,
        SandyBrown,
        SeaGreen,
        SeaShell,
        Sienna,
        Silver,
        SkyBlue,
        SlateBlue,
        SlateGray,
        Snow,
        SpringGreen,
        SteelBlue,
        Tan,
        Teal,
        Thistle,
        Tomato,
        Turquoise,
        Violet,
        Wheat,
        White,
        WhiteSmoke,
        Yellow,
        YellowGreen,
        ButtonFace,
        ButtonHighlight,
        ButtonShadow,
        GradientActiveCaption,
        GradientInactiveCaption,
        MenuBar,
        MenuHighlight
    }

    export interface Pen {
        NativePen: number;
        Width: number;
        StartCap: System.Drawing.Drawing2D.LineCap;
        EndCap: System.Drawing.Drawing2D.LineCap;
        DashCap: System.Drawing.Drawing2D.DashCap;
        LineJoin: System.Drawing.Drawing2D.LineJoin;
        CustomStartCap: System.Drawing.Drawing2D.CustomLineCap;
        CustomEndCap: System.Drawing.Drawing2D.CustomLineCap;
        MiterLimit: number;
        Alignment: System.Drawing.Drawing2D.PenAlignment;
        Transform: System.Drawing.Drawing2D.Matrix;
        PenType: System.Drawing.Drawing2D.PenType;
        Color: System.Drawing.Color;
        Brush: System.Drawing.Brush;
        DashStyle: System.Drawing.Drawing2D.DashStyle;
        DashOffset: number;
        DashPattern: number[];
        CompoundArray: number[];
    }

    export interface Pens {
        Transparent: System.Drawing.Pen;
        AliceBlue: System.Drawing.Pen;
        AntiqueWhite: System.Drawing.Pen;
        Aqua: System.Drawing.Pen;
        Aquamarine: System.Drawing.Pen;
        Azure: System.Drawing.Pen;
        Beige: System.Drawing.Pen;
        Bisque: System.Drawing.Pen;
        Black: System.Drawing.Pen;
        BlanchedAlmond: System.Drawing.Pen;
        Blue: System.Drawing.Pen;
        BlueViolet: System.Drawing.Pen;
        Brown: System.Drawing.Pen;
        BurlyWood: System.Drawing.Pen;
        CadetBlue: System.Drawing.Pen;
        Chartreuse: System.Drawing.Pen;
        Chocolate: System.Drawing.Pen;
        Coral: System.Drawing.Pen;
        CornflowerBlue: System.Drawing.Pen;
        Cornsilk: System.Drawing.Pen;
        Crimson: System.Drawing.Pen;
        Cyan: System.Drawing.Pen;
        DarkBlue: System.Drawing.Pen;
        DarkCyan: System.Drawing.Pen;
        DarkGoldenrod: System.Drawing.Pen;
        DarkGray: System.Drawing.Pen;
        DarkGreen: System.Drawing.Pen;
        DarkKhaki: System.Drawing.Pen;
        DarkMagenta: System.Drawing.Pen;
        DarkOliveGreen: System.Drawing.Pen;
        DarkOrange: System.Drawing.Pen;
        DarkOrchid: System.Drawing.Pen;
        DarkRed: System.Drawing.Pen;
        DarkSalmon: System.Drawing.Pen;
        DarkSeaGreen: System.Drawing.Pen;
        DarkSlateBlue: System.Drawing.Pen;
        DarkSlateGray: System.Drawing.Pen;
        DarkTurquoise: System.Drawing.Pen;
        DarkViolet: System.Drawing.Pen;
        DeepPink: System.Drawing.Pen;
        DeepSkyBlue: System.Drawing.Pen;
        DimGray: System.Drawing.Pen;
        DodgerBlue: System.Drawing.Pen;
        Firebrick: System.Drawing.Pen;
        FloralWhite: System.Drawing.Pen;
        ForestGreen: System.Drawing.Pen;
        Fuchsia: System.Drawing.Pen;
        Gainsboro: System.Drawing.Pen;
        GhostWhite: System.Drawing.Pen;
        Gold: System.Drawing.Pen;
        Goldenrod: System.Drawing.Pen;
        Gray: System.Drawing.Pen;
        Green: System.Drawing.Pen;
        GreenYellow: System.Drawing.Pen;
        Honeydew: System.Drawing.Pen;
        HotPink: System.Drawing.Pen;
        IndianRed: System.Drawing.Pen;
        Indigo: System.Drawing.Pen;
        Ivory: System.Drawing.Pen;
        Khaki: System.Drawing.Pen;
        Lavender: System.Drawing.Pen;
        LavenderBlush: System.Drawing.Pen;
        LawnGreen: System.Drawing.Pen;
        LemonChiffon: System.Drawing.Pen;
        LightBlue: System.Drawing.Pen;
        LightCoral: System.Drawing.Pen;
        LightCyan: System.Drawing.Pen;
        LightGoldenrodYellow: System.Drawing.Pen;
        LightGreen: System.Drawing.Pen;
        LightGray: System.Drawing.Pen;
        LightPink: System.Drawing.Pen;
        LightSalmon: System.Drawing.Pen;
        LightSeaGreen: System.Drawing.Pen;
        LightSkyBlue: System.Drawing.Pen;
        LightSlateGray: System.Drawing.Pen;
        LightSteelBlue: System.Drawing.Pen;
        LightYellow: System.Drawing.Pen;
        Lime: System.Drawing.Pen;
        LimeGreen: System.Drawing.Pen;
        Linen: System.Drawing.Pen;
        Magenta: System.Drawing.Pen;
        Maroon: System.Drawing.Pen;
        MediumAquamarine: System.Drawing.Pen;
        MediumBlue: System.Drawing.Pen;
        MediumOrchid: System.Drawing.Pen;
        MediumPurple: System.Drawing.Pen;
        MediumSeaGreen: System.Drawing.Pen;
        MediumSlateBlue: System.Drawing.Pen;
        MediumSpringGreen: System.Drawing.Pen;
        MediumTurquoise: System.Drawing.Pen;
        MediumVioletRed: System.Drawing.Pen;
        MidnightBlue: System.Drawing.Pen;
        MintCream: System.Drawing.Pen;
        MistyRose: System.Drawing.Pen;
        Moccasin: System.Drawing.Pen;
        NavajoWhite: System.Drawing.Pen;
        Navy: System.Drawing.Pen;
        OldLace: System.Drawing.Pen;
        Olive: System.Drawing.Pen;
        OliveDrab: System.Drawing.Pen;
        Orange: System.Drawing.Pen;
        OrangeRed: System.Drawing.Pen;
        Orchid: System.Drawing.Pen;
        PaleGoldenrod: System.Drawing.Pen;
        PaleGreen: System.Drawing.Pen;
        PaleTurquoise: System.Drawing.Pen;
        PaleVioletRed: System.Drawing.Pen;
        PapayaWhip: System.Drawing.Pen;
        PeachPuff: System.Drawing.Pen;
        Peru: System.Drawing.Pen;
        Pink: System.Drawing.Pen;
        Plum: System.Drawing.Pen;
        PowderBlue: System.Drawing.Pen;
        Purple: System.Drawing.Pen;
        Red: System.Drawing.Pen;
        RosyBrown: System.Drawing.Pen;
        RoyalBlue: System.Drawing.Pen;
        SaddleBrown: System.Drawing.Pen;
        Salmon: System.Drawing.Pen;
        SandyBrown: System.Drawing.Pen;
        SeaGreen: System.Drawing.Pen;
        SeaShell: System.Drawing.Pen;
        Sienna: System.Drawing.Pen;
        Silver: System.Drawing.Pen;
        SkyBlue: System.Drawing.Pen;
        SlateBlue: System.Drawing.Pen;
        SlateGray: System.Drawing.Pen;
        Snow: System.Drawing.Pen;
        SpringGreen: System.Drawing.Pen;
        SteelBlue: System.Drawing.Pen;
        Tan: System.Drawing.Pen;
        Teal: System.Drawing.Pen;
        Thistle: System.Drawing.Pen;
        Tomato: System.Drawing.Pen;
        Turquoise: System.Drawing.Pen;
        Violet: System.Drawing.Pen;
        Wheat: System.Drawing.Pen;
        White: System.Drawing.Pen;
        WhiteSmoke: System.Drawing.Pen;
        Yellow: System.Drawing.Pen;
        YellowGreen: System.Drawing.Pen;
    }

    export interface Point {
        Empty: System.Drawing.Point;
        IsEmpty: boolean;
        X: number;
        Y: number;
    }

    export interface PointConverter {
    }

    export interface PointF {
        Empty: System.Drawing.PointF;
        IsEmpty: boolean;
        X: number;
        Y: number;
    }

    export interface Rectangle {
        Empty: System.Drawing.Rectangle;
        Location: System.Drawing.Point;
        Size: System.Drawing.Size;
        X: number;
        Y: number;
        Width: number;
        Height: number;
        Left: number;
        Top: number;
        Right: number;
        Bottom: number;
        IsEmpty: boolean;
    }

    export interface RectangleConverter {
    }

    export interface RectangleF {
        Empty: System.Drawing.RectangleF;
        Location: System.Drawing.PointF;
        Size: System.Drawing.SizeF;
        X: number;
        Y: number;
        Width: number;
        Height: number;
        Left: number;
        Top: number;
        Right: number;
        Bottom: number;
        IsEmpty: boolean;
    }

    export interface Region {
    }

    enum RotateFlipType {
        RotateNoneFlipNone,
        Rotate180FlipXY,
        Rotate90FlipNone,
        Rotate270FlipXY,
        Rotate180FlipNone,
        RotateNoneFlipXY,
        Rotate270FlipNone,
        Rotate90FlipXY,
        RotateNoneFlipX,
        Rotate180FlipY,
        Rotate90FlipX,
        Rotate270FlipY,
        Rotate180FlipX,
        RotateNoneFlipY,
        Rotate270FlipX,
        Rotate90FlipY
    }

    export interface Size {
        Empty: System.Drawing.Size;
        IsEmpty: boolean;
        Width: number;
        Height: number;
    }

    export interface SizeConverter {
    }

    export interface SizeF {
        Empty: System.Drawing.SizeF;
        IsEmpty: boolean;
        Width: number;
        Height: number;
    }

    export interface SizeFConverter {
    }

    export interface SolidBrush extends System.Drawing.Internal.ISystemColorTracker {
        Color: System.Drawing.Color;
    }

    enum StringAlignment {
        Near,
        Center,
        Far
    }

    enum StringDigitSubstitute {
        User,
        None,
        National,
        Traditional
    }

    export interface StringFormat {
        FormatFlags: System.Drawing.StringFormatFlags;
        Alignment: System.Drawing.StringAlignment;
        LineAlignment: System.Drawing.StringAlignment;
        HotkeyPrefix: System.Drawing.Text.HotkeyPrefix;
        Trimming: System.Drawing.StringTrimming;
        GenericDefault: System.Drawing.StringFormat;
        GenericTypographic: System.Drawing.StringFormat;
        DigitSubstitutionMethod: System.Drawing.StringDigitSubstitute;
        DigitSubstitutionLanguage: number;
    }

    enum StringFormatFlags {
        DirectionRightToLeft,
        DirectionVertical,
        FitBlackBox,
        DisplayFormatControl,
        NoFontFallback,
        MeasureTrailingSpaces,
        NoWrap,
        LineLimit,
        NoClip
    }

    enum StringTrimming {
        None,
        Character,
        Word,
        EllipsisCharacter,
        EllipsisWord,
        EllipsisPath
    }

    enum StringUnit {
        World,
        Display,
        Pixel,
        Point,
        Inch,
        Document,
        Millimeter,
        Em
    }

    export interface SystemBrushes {
        ActiveBorder: System.Drawing.Brush;
        ActiveCaption: System.Drawing.Brush;
        ActiveCaptionText: System.Drawing.Brush;
        AppWorkspace: System.Drawing.Brush;
        ButtonFace: System.Drawing.Brush;
        ButtonHighlight: System.Drawing.Brush;
        ButtonShadow: System.Drawing.Brush;
        Control: System.Drawing.Brush;
        ControlLightLight: System.Drawing.Brush;
        ControlLight: System.Drawing.Brush;
        ControlDark: System.Drawing.Brush;
        ControlDarkDark: System.Drawing.Brush;
        ControlText: System.Drawing.Brush;
        Desktop: System.Drawing.Brush;
        GradientActiveCaption: System.Drawing.Brush;
        GradientInactiveCaption: System.Drawing.Brush;
        GrayText: System.Drawing.Brush;
        Highlight: System.Drawing.Brush;
        HighlightText: System.Drawing.Brush;
        HotTrack: System.Drawing.Brush;
        InactiveCaption: System.Drawing.Brush;
        InactiveBorder: System.Drawing.Brush;
        InactiveCaptionText: System.Drawing.Brush;
        Info: System.Drawing.Brush;
        InfoText: System.Drawing.Brush;
        Menu: System.Drawing.Brush;
        MenuBar: System.Drawing.Brush;
        MenuHighlight: System.Drawing.Brush;
        MenuText: System.Drawing.Brush;
        ScrollBar: System.Drawing.Brush;
        Window: System.Drawing.Brush;
        WindowFrame: System.Drawing.Brush;
        WindowText: System.Drawing.Brush;
    }

    export interface SystemColors {
        ActiveBorder: System.Drawing.Color;
        ActiveCaption: System.Drawing.Color;
        ActiveCaptionText: System.Drawing.Color;
        AppWorkspace: System.Drawing.Color;
        ButtonFace: System.Drawing.Color;
        ButtonHighlight: System.Drawing.Color;
        ButtonShadow: System.Drawing.Color;
        Control: System.Drawing.Color;
        ControlDark: System.Drawing.Color;
        ControlDarkDark: System.Drawing.Color;
        ControlLight: System.Drawing.Color;
        ControlLightLight: System.Drawing.Color;
        ControlText: System.Drawing.Color;
        Desktop: System.Drawing.Color;
        GradientActiveCaption: System.Drawing.Color;
        GradientInactiveCaption: System.Drawing.Color;
        GrayText: System.Drawing.Color;
        Highlight: System.Drawing.Color;
        HighlightText: System.Drawing.Color;
        HotTrack: System.Drawing.Color;
        InactiveBorder: System.Drawing.Color;
        InactiveCaption: System.Drawing.Color;
        InactiveCaptionText: System.Drawing.Color;
        Info: System.Drawing.Color;
        InfoText: System.Drawing.Color;
        Menu: System.Drawing.Color;
        MenuBar: System.Drawing.Color;
        MenuHighlight: System.Drawing.Color;
        MenuText: System.Drawing.Color;
        ScrollBar: System.Drawing.Color;
        Window: System.Drawing.Color;
        WindowFrame: System.Drawing.Color;
        WindowText: System.Drawing.Color;
    }

    export interface SystemFonts {
        CaptionFont: System.Drawing.Font;
        SmallCaptionFont: System.Drawing.Font;
        MenuFont: System.Drawing.Font;
        StatusFont: System.Drawing.Font;
        MessageBoxFont: System.Drawing.Font;
        IconTitleFont: System.Drawing.Font;
        DefaultFont: System.Drawing.Font;
        DialogFont: System.Drawing.Font;
    }

    export interface SystemIcons {
        Application: System.Drawing.Icon;
        Asterisk: System.Drawing.Icon;
        Error: System.Drawing.Icon;
        Exclamation: System.Drawing.Icon;
        Hand: System.Drawing.Icon;
        Information: System.Drawing.Icon;
        Question: System.Drawing.Icon;
        Warning: System.Drawing.Icon;
        WinLogo: System.Drawing.Icon;
        Shield: System.Drawing.Icon;
    }

    export interface SystemPens {
        ActiveBorder: System.Drawing.Pen;
        ActiveCaption: System.Drawing.Pen;
        ActiveCaptionText: System.Drawing.Pen;
        AppWorkspace: System.Drawing.Pen;
        ButtonFace: System.Drawing.Pen;
        ButtonHighlight: System.Drawing.Pen;
        ButtonShadow: System.Drawing.Pen;
        Control: System.Drawing.Pen;
        ControlText: System.Drawing.Pen;
        ControlDark: System.Drawing.Pen;
        ControlDarkDark: System.Drawing.Pen;
        ControlLight: System.Drawing.Pen;
        ControlLightLight: System.Drawing.Pen;
        Desktop: System.Drawing.Pen;
        GradientActiveCaption: System.Drawing.Pen;
        GradientInactiveCaption: System.Drawing.Pen;
        GrayText: System.Drawing.Pen;
        Highlight: System.Drawing.Pen;
        HighlightText: System.Drawing.Pen;
        HotTrack: System.Drawing.Pen;
        InactiveBorder: System.Drawing.Pen;
        InactiveCaption: System.Drawing.Pen;
        InactiveCaptionText: System.Drawing.Pen;
        Info: System.Drawing.Pen;
        InfoText: System.Drawing.Pen;
        Menu: System.Drawing.Pen;
        MenuBar: System.Drawing.Pen;
        MenuHighlight: System.Drawing.Pen;
        MenuText: System.Drawing.Pen;
        ScrollBar: System.Drawing.Pen;
        Window: System.Drawing.Pen;
        WindowFrame: System.Drawing.Pen;
        WindowText: System.Drawing.Pen;
    }

    export interface TextureBrush {
        Transform: System.Drawing.Drawing2D.Matrix;
        WrapMode: System.Drawing.Drawing2D.WrapMode;
        Image: System.Drawing.Image;
    }

    export interface ToolboxBitmapAttribute {
        Default: System.Drawing.ToolboxBitmapAttribute;
    }

}
declare module System.Drawing.Configuration {

    export interface SystemDrawingSection {
        BitmapSuffix: string;
        Properties: any; // System.Configuration.ConfigurationPropertyCollection
    }

}
declare module System.Drawing.Design {

    export interface CategoryNameCollection {
        Item: string;
    }

    export interface IPropertyValueUIService {
    }

    export interface IToolboxItemProvider {
        Items: System.Drawing.Design.ToolboxItemCollection;
    }

    export interface IToolboxService {
        CategoryNames: System.Drawing.Design.CategoryNameCollection;
        SelectedCategory: string;
    }

    export interface IToolboxUser {
    }

    export interface PaintValueEventArgs {
        Bounds: System.Drawing.Rectangle;
        Context: any; // System.ComponentModel.ITypeDescriptorContext
        Graphics: System.Drawing.Graphics;
        Value: any;
    }

    export interface PropertyValueUIHandler {
    }

    export interface PropertyValueUIItem {
        Image: System.Drawing.Image;
        InvokeHandler: System.Drawing.Design.PropertyValueUIItemInvokeHandler;
        ToolTip: string;
    }

    export interface PropertyValueUIItemInvokeHandler {
    }

    export interface ToolboxComponentsCreatedEventArgs {
        Components: any[]; // System.ComponentModel.IComponent[]
    }

    export interface ToolboxComponentsCreatedEventHandler {
    }

    export interface ToolboxComponentsCreatingEventArgs {
        DesignerHost: any; // System.ComponentModel.Design.IDesignerHost
    }

    export interface ToolboxComponentsCreatingEventHandler {
    }

    export interface ToolboxItem {
        AssemblyName: any; // System.Reflection.AssemblyName
        DependentAssemblies: any[]; // System.Reflection.AssemblyName
        Bitmap: System.Drawing.Bitmap;
        OriginalBitmap: System.Drawing.Bitmap;
        Company: string;
        ComponentType: string;
        Description: string;
        DisplayName: string;
        Filter: any; // System.Collections.ICollection
        IsTransient: boolean;
        Locked: boolean;
        Properties: any; // System.Collections.IDictionary
        TypeName: string;
        Version: string;
    }

    export interface ToolboxItemCollection {
        Item: System.Drawing.Design.ToolboxItem;
    }

    export interface ToolboxItemCreatorCallback {
    }

    export interface UITypeEditor {
        IsDropDownResizable: boolean;
    }

    enum UITypeEditorEditStyle {
        None,
        Modal,
        DropDown
    }

}
declare module System.Drawing.Drawing2D {

    export interface AdjustableArrowCap {
        Height: number;
        Width: number;
        MiddleInset: number;
        Filled: boolean;
    }

    export interface Blend {
        Factors: number[];
        Positions: number[];
    }

    export interface ColorBlend {
        Colors: System.Drawing.Color[];
        Positions: number[];
    }

    enum CombineMode {
        Replace,
        Intersect,
        Union,
        Xor,
        Exclude,
        Complement
    }

    enum CompositingMode {
        SourceOver,
        SourceCopy
    }

    enum CompositingQuality {
        Invalid,
        Default,
        HighSpeed,
        HighQuality,
        GammaCorrected,
        AssumeLinear
    }

    enum CoordinateSpace {
        World,
        Page,
        Device
    }

    export interface CustomLineCap {
        StrokeJoin: System.Drawing.Drawing2D.LineJoin;
        BaseCap: System.Drawing.Drawing2D.LineCap;
        BaseInset: number;
        WidthScale: number;
    }

    enum DashCap {
        Flat,
        Round,
        Triangle
    }

    enum DashStyle {
        Solid,
        Dash,
        Dot,
        DashDot,
        DashDotDot,
        Custom
    }

    enum FillMode {
        Alternate,
        Winding
    }

    enum FlushIntention {
        Flush,
        Sync
    }

    export interface GraphicsContainer {
    }

    export interface GraphicsPath {
        FillMode: System.Drawing.Drawing2D.FillMode;
        PathData: System.Drawing.Drawing2D.PathData;
        PointCount: number;
        PathTypes: any;
        PathPoints: System.Drawing.PointF[];
    }

    export interface GraphicsPathIterator {
        Count: number;
        SubpathCount: number;
    }

    export interface GraphicsState {
    }

    export interface HatchBrush {
        HatchStyle: System.Drawing.Drawing2D.HatchStyle;
        ForegroundColor: System.Drawing.Color;
        BackgroundColor: System.Drawing.Color;
    }

    enum HatchStyle {
        Horizontal,
        Min,
        Vertical,
        ForwardDiagonal,
        BackwardDiagonal,
        Cross,
        LargeGrid,
        Max,
        DiagonalCross,
        Percent05,
        Percent10,
        Percent20,
        Percent25,
        Percent30,
        Percent40,
        Percent50,
        Percent60,
        Percent70,
        Percent75,
        Percent80,
        Percent90,
        LightDownwardDiagonal,
        LightUpwardDiagonal,
        DarkDownwardDiagonal,
        DarkUpwardDiagonal,
        WideDownwardDiagonal,
        WideUpwardDiagonal,
        LightVertical,
        LightHorizontal,
        NarrowVertical,
        NarrowHorizontal,
        DarkVertical,
        DarkHorizontal,
        DashedDownwardDiagonal,
        DashedUpwardDiagonal,
        DashedHorizontal,
        DashedVertical,
        SmallConfetti,
        LargeConfetti,
        ZigZag,
        Wave,
        DiagonalBrick,
        HorizontalBrick,
        Weave,
        Plaid,
        Divot,
        DottedGrid,
        DottedDiamond,
        Shingle,
        Trellis,
        Sphere,
        SmallGrid,
        SmallCheckerBoard,
        LargeCheckerBoard,
        OutlinedDiamond,
        SolidDiamond
    }

    enum InterpolationMode {
        Invalid,
        Default,
        Low,
        High,
        Bilinear,
        Bicubic,
        NearestNeighbor,
        HighQualityBilinear,
        HighQualityBicubic
    }

    export interface LinearGradientBrush {
        LinearColors: System.Drawing.Color[];
        Rectangle: System.Drawing.RectangleF;
        GammaCorrection: boolean;
        Blend: System.Drawing.Drawing2D.Blend;
        InterpolationColors: System.Drawing.Drawing2D.ColorBlend;
        WrapMode: System.Drawing.Drawing2D.WrapMode;
        Transform: System.Drawing.Drawing2D.Matrix;
    }

    enum LinearGradientMode {
        Horizontal,
        Vertical,
        ForwardDiagonal,
        BackwardDiagonal
    }

    enum LineCap {
        Flat,
        Square,
        Round,
        Triangle,
        NoAnchor,
        SquareAnchor,
        RoundAnchor,
        DiamondAnchor,
        ArrowAnchor,
        AnchorMask,
        Custom
    }

    enum LineJoin {
        Miter,
        Bevel,
        Round,
        MiterClipped
    }

    export interface Matrix {
        Elements: number[];
        OffsetX: number;
        OffsetY: number;
        IsInvertible: boolean;
        IsIdentity: boolean;
    }

    enum MatrixOrder {
        Prepend,
        Append
    }

    export interface PathData {
        Points: System.Drawing.PointF[];
        Types: any;
    }

    export interface PathGradientBrush {
        CenterColor: System.Drawing.Color;
        SurroundColors: System.Drawing.Color[];
        CenterPoint: System.Drawing.PointF;
        Rectangle: System.Drawing.RectangleF;
        Blend: System.Drawing.Drawing2D.Blend;
        InterpolationColors: System.Drawing.Drawing2D.ColorBlend;
        Transform: System.Drawing.Drawing2D.Matrix;
        FocusScales: System.Drawing.PointF;
        WrapMode: System.Drawing.Drawing2D.WrapMode;
    }

    enum PathPointType {
        Start,
        Line,
        Bezier,
        Bezier3,
        PathTypeMask,
        DashMode,
        PathMarker,
        CloseSubpath
    }

    enum PenAlignment {
        Center,
        Inset,
        Outset,
        Left,
        Right
    }

    enum PenType {
        SolidColor,
        HatchFill,
        TextureFill,
        PathGradient,
        LinearGradient
    }

    enum PixelOffsetMode {
        Invalid,
        Default,
        HighSpeed,
        HighQuality,
        None,
        Half
    }

    enum QualityMode {
        Invalid,
        Default,
        Low,
        High
    }

    export interface RegionData {
        Data: any;
    }

    enum SmoothingMode {
        Invalid,
        Default,
        HighSpeed,
        HighQuality,
        None,
        AntiAlias
    }

    enum WarpMode {
        Perspective,
        Bilinear
    }

    enum WrapMode {
        Tile,
        TileFlipX,
        TileFlipY,
        TileFlipXY,
        Clamp
    }

}
declare module System.Drawing.Imaging {

    export interface BitmapData {
        Width: number;
        Height: number;
        Stride: number;
        PixelFormat: System.Drawing.Imaging.PixelFormat;
        Scan0: number;
        Reserved: number;
    }

    enum ColorAdjustType {
        Default,
        Bitmap,
        Brush,
        Pen,
        Text,
        Count,
        Any
    }

    enum ColorChannelFlag {
        ColorChannelC,
        ColorChannelM,
        ColorChannelY,
        ColorChannelK,
        ColorChannelLast
    }

    export interface ColorMap {
        OldColor: System.Drawing.Color;
        NewColor: System.Drawing.Color;
    }

    enum ColorMapType {
        Default,
        Brush
    }

    export interface ColorMatrix {
        Matrix00: number;
        Matrix01: number;
        Matrix02: number;
        Matrix03: number;
        Matrix04: number;
        Matrix10: number;
        Matrix11: number;
        Matrix12: number;
        Matrix13: number;
        Matrix14: number;
        Matrix20: number;
        Matrix21: number;
        Matrix22: number;
        Matrix23: number;
        Matrix24: number;
        Matrix30: number;
        Matrix31: number;
        Matrix32: number;
        Matrix33: number;
        Matrix34: number;
        Matrix40: number;
        Matrix41: number;
        Matrix42: number;
        Matrix43: number;
        Matrix44: number;
        Item: number;
    }

    enum ColorMatrixFlag {
        Default,
        SkipGrays,
        AltGrays
    }

    enum ColorMode {
        Argb32Mode,
        Argb64Mode
    }

    export interface ColorPalette {
        Flags: number;
        Entries: System.Drawing.Color[];
    }

    enum EmfPlusRecordType {
        EmfHeader,
        EmfMin,
        EmfPolyBezier,
        EmfPolygon,
        EmfPolyline,
        EmfPolyBezierTo,
        EmfPolyLineTo,
        EmfPolyPolyline,
        EmfPolyPolygon,
        EmfSetWindowExtEx,
        EmfSetWindowOrgEx,
        EmfSetViewportExtEx,
        EmfSetViewportOrgEx,
        EmfSetBrushOrgEx,
        EmfEof,
        EmfSetPixelV,
        EmfSetMapperFlags,
        EmfSetMapMode,
        EmfSetBkMode,
        EmfSetPolyFillMode,
        EmfSetROP2,
        EmfSetStretchBltMode,
        EmfSetTextAlign,
        EmfSetColorAdjustment,
        EmfSetTextColor,
        EmfSetBkColor,
        EmfOffsetClipRgn,
        EmfMoveToEx,
        EmfSetMetaRgn,
        EmfExcludeClipRect,
        EmfIntersectClipRect,
        EmfScaleViewportExtEx,
        EmfScaleWindowExtEx,
        EmfSaveDC,
        EmfRestoreDC,
        EmfSetWorldTransform,
        EmfModifyWorldTransform,
        EmfSelectObject,
        EmfCreatePen,
        EmfCreateBrushIndirect,
        EmfDeleteObject,
        EmfAngleArc,
        EmfEllipse,
        EmfRectangle,
        EmfRoundRect,
        EmfRoundArc,
        EmfChord,
        EmfPie,
        EmfSelectPalette,
        EmfCreatePalette,
        EmfSetPaletteEntries,
        EmfResizePalette,
        EmfRealizePalette,
        EmfExtFloodFill,
        EmfLineTo,
        EmfArcTo,
        EmfPolyDraw,
        EmfSetArcDirection,
        EmfSetMiterLimit,
        EmfBeginPath,
        EmfEndPath,
        EmfCloseFigure,
        EmfFillPath,
        EmfStrokeAndFillPath,
        EmfStrokePath,
        EmfFlattenPath,
        EmfWidenPath,
        EmfSelectClipPath,
        EmfAbortPath,
        EmfReserved069,
        EmfGdiComment,
        EmfFillRgn,
        EmfFrameRgn,
        EmfInvertRgn,
        EmfPaintRgn,
        EmfExtSelectClipRgn,
        EmfBitBlt,
        EmfStretchBlt,
        EmfMaskBlt,
        EmfPlgBlt,
        EmfSetDIBitsToDevice,
        EmfStretchDIBits,
        EmfExtCreateFontIndirect,
        EmfExtTextOutA,
        EmfExtTextOutW,
        EmfPolyBezier16,
        EmfPolygon16,
        EmfPolyline16,
        EmfPolyBezierTo16,
        EmfPolylineTo16,
        EmfPolyPolyline16,
        EmfPolyPolygon16,
        EmfPolyDraw16,
        EmfCreateMonoBrush,
        EmfCreateDibPatternBrushPt,
        EmfExtCreatePen,
        EmfPolyTextOutA,
        EmfPolyTextOutW,
        EmfSetIcmMode,
        EmfCreateColorSpace,
        EmfSetColorSpace,
        EmfDeleteColorSpace,
        EmfGlsRecord,
        EmfGlsBoundedRecord,
        EmfPixelFormat,
        EmfDrawEscape,
        EmfExtEscape,
        EmfStartDoc,
        EmfSmallTextOut,
        EmfForceUfiMapping,
        EmfNamedEscpae,
        EmfColorCorrectPalette,
        EmfSetIcmProfileA,
        EmfSetIcmProfileW,
        EmfAlphaBlend,
        EmfSetLayout,
        EmfTransparentBlt,
        EmfReserved117,
        EmfGradientFill,
        EmfSetLinkedUfis,
        EmfSetTextJustification,
        EmfColorMatchToTargetW,
        EmfCreateColorSpaceW,
        EmfMax,
        EmfPlusRecordBase,
        Invalid,
        Header,
        Min,
        EndOfFile,
        Comment,
        GetDC,
        MultiFormatStart,
        MultiFormatSection,
        MultiFormatEnd,
        Object,
        Clear,
        FillRects,
        DrawRects,
        FillPolygon,
        DrawLines,
        FillEllipse,
        DrawEllipse,
        FillPie,
        DrawPie,
        DrawArc,
        FillRegion,
        FillPath,
        DrawPath,
        FillClosedCurve,
        DrawClosedCurve,
        DrawCurve,
        DrawBeziers,
        DrawImage,
        DrawImagePoints,
        DrawString,
        SetRenderingOrigin,
        SetAntiAliasMode,
        SetTextRenderingHint,
        SetTextContrast,
        SetInterpolationMode,
        SetPixelOffsetMode,
        SetCompositingMode,
        SetCompositingQuality,
        Save,
        Restore,
        BeginContainer,
        BeginContainerNoParams,
        EndContainer,
        SetWorldTransform,
        ResetWorldTransform,
        MultiplyWorldTransform,
        TranslateWorldTransform,
        ScaleWorldTransform,
        RotateWorldTransform,
        SetPageTransform,
        ResetClip,
        SetClipRect,
        SetClipPath,
        SetClipRegion,
        OffsetClip,
        DrawDriverString,
        Max,
        Total,
        WmfRecordBase,
        WmfSaveDC,
        WmfRealizePalette,
        WmfSetPalEntries,
        WmfCreatePalette,
        WmfSetBkMode,
        WmfSetMapMode,
        WmfSetROP2,
        WmfSetRelAbs,
        WmfSetPolyFillMode,
        WmfSetStretchBltMode,
        WmfSetTextCharExtra,
        WmfRestoreDC,
        WmfInvertRegion,
        WmfPaintRegion,
        WmfSelectClipRegion,
        WmfSelectObject,
        WmfSetTextAlign,
        WmfResizePalette,
        WmfDibCreatePatternBrush,
        WmfSetLayout,
        WmfDeleteObject,
        WmfCreatePatternBrush,
        WmfSetBkColor,
        WmfSetTextColor,
        WmfSetTextJustification,
        WmfSetWindowOrg,
        WmfSetWindowExt,
        WmfSetViewportOrg,
        WmfSetViewportExt,
        WmfOffsetWindowOrg,
        WmfOffsetViewportOrg,
        WmfLineTo,
        WmfMoveTo,
        WmfOffsetCilpRgn,
        WmfFillRegion,
        WmfSetMapperFlags,
        WmfSelectPalette,
        WmfCreatePenIndirect,
        WmfCreateFontIndirect,
        WmfCreateBrushIndirect,
        WmfPolygon,
        WmfPolyline,
        WmfScaleWindowExt,
        WmfScaleViewportExt,
        WmfExcludeClipRect,
        WmfIntersectClipRect,
        WmfEllipse,
        WmfFloodFill,
        WmfRectangle,
        WmfSetPixel,
        WmfFrameRegion,
        WmfAnimatePalette,
        WmfTextOut,
        WmfPolyPolygon,
        WmfExtFloodFill,
        WmfRoundRect,
        WmfPatBlt,
        WmfEscape,
        WmfCreateRegion,
        WmfArc,
        WmfPie,
        WmfChord,
        WmfBitBlt,
        WmfDibBitBlt,
        WmfExtTextOut,
        WmfStretchBlt,
        WmfDibStretchBlt,
        WmfSetDibToDev,
        WmfStretchDib
    }

    enum EmfType {
        EmfOnly,
        EmfPlusOnly,
        EmfPlusDual
    }

    export interface Encoder {
        Compression: System.Drawing.Imaging.Encoder;
        ColorDepth: System.Drawing.Imaging.Encoder;
        ScanMethod: System.Drawing.Imaging.Encoder;
        Version: System.Drawing.Imaging.Encoder;
        RenderMethod: System.Drawing.Imaging.Encoder;
        Quality: System.Drawing.Imaging.Encoder;
        Transformation: System.Drawing.Imaging.Encoder;
        LuminanceTable: System.Drawing.Imaging.Encoder;
        ChrominanceTable: System.Drawing.Imaging.Encoder;
        SaveFlag: System.Drawing.Imaging.Encoder;
        Guid: string;
    }

    export interface EncoderParameter {
        Encoder: System.Drawing.Imaging.Encoder;
        Type: System.Drawing.Imaging.EncoderParameterValueType;
        ValueType: System.Drawing.Imaging.EncoderParameterValueType;
        NumberOfValues: number;
    }

    export interface EncoderParameters {
        Param: System.Drawing.Imaging.EncoderParameter[];
    }

    enum EncoderParameterValueType {
        ValueTypeByte,
        ValueTypeAscii,
        ValueTypeShort,
        ValueTypeLong,
        ValueTypeRational,
        ValueTypeLongRange,
        ValueTypeUndefined,
        ValueTypeRationalRange
    }

    enum EncoderValue {
        ColorTypeCMYK,
        ColorTypeYCCK,
        CompressionLZW,
        CompressionCCITT3,
        CompressionCCITT4,
        CompressionRle,
        CompressionNone,
        ScanMethodInterlaced,
        ScanMethodNonInterlaced,
        VersionGif87,
        VersionGif89,
        RenderProgressive,
        RenderNonProgressive,
        TransformRotate90,
        TransformRotate180,
        TransformRotate270,
        TransformFlipHorizontal,
        TransformFlipVertical,
        MultiFrame,
        LastFrame,
        Flush,
        FrameDimensionTime,
        FrameDimensionResolution,
        FrameDimensionPage
    }

    export interface FrameDimension {
        Guid: string;
        Time: System.Drawing.Imaging.FrameDimension;
        Resolution: System.Drawing.Imaging.FrameDimension;
        Page: System.Drawing.Imaging.FrameDimension;
    }

    export interface ImageAttributes {
    }

    enum ImageCodecFlags {
        Encoder,
        Decoder,
        SupportBitmap,
        SupportVector,
        SeekableEncode,
        BlockingDecode,
        Builtin,
        System,
        User
    }

    export interface ImageCodecInfo {
        Clsid: string;
        FormatID: string;
        CodecName: string;
        DllName: string;
        FormatDescription: string;
        FilenameExtension: string;
        MimeType: string;
        Flags: System.Drawing.Imaging.ImageCodecFlags;
        Version: number;
        SignaturePatterns: number[][];
        SignatureMasks: number[][];
    }

    enum ImageFlags {
        None,
        Scalable,
        HasAlpha,
        HasTranslucent,
        PartiallyScalable,
        ColorSpaceRgb,
        ColorSpaceCmyk,
        ColorSpaceGray,
        ColorSpaceYcbcr,
        ColorSpaceYcck,
        HasRealDpi,
        HasRealPixelSize,
        ReadOnly,
        Caching
    }

    export interface ImageFormat {
        Guid: string;
        MemoryBmp: System.Drawing.Imaging.ImageFormat;
        Bmp: System.Drawing.Imaging.ImageFormat;
        Emf: System.Drawing.Imaging.ImageFormat;
        Wmf: System.Drawing.Imaging.ImageFormat;
        Gif: System.Drawing.Imaging.ImageFormat;
        Jpeg: System.Drawing.Imaging.ImageFormat;
        Png: System.Drawing.Imaging.ImageFormat;
        Tiff: System.Drawing.Imaging.ImageFormat;
        Exif: System.Drawing.Imaging.ImageFormat;
        Icon: System.Drawing.Imaging.ImageFormat;
    }

    enum ImageLockMode {
        ReadOnly,
        WriteOnly,
        ReadWrite,
        UserInputBuffer
    }

    export interface Metafile {
    }

    enum MetafileFrameUnit {
        Pixel,
        Point,
        Inch,
        Document,
        Millimeter,
        GdiCompatible
    }

    export interface MetafileHeader {
        Type: System.Drawing.Imaging.MetafileType;
        MetafileSize: number;
        Version: number;
        DpiX: number;
        DpiY: number;
        Bounds: System.Drawing.Rectangle;
        WmfHeader: System.Drawing.Imaging.MetaHeader;
        EmfPlusHeaderSize: number;
        LogicalDpiX: number;
        LogicalDpiY: number;
    }

    enum MetafileType {
        Invalid,
        Wmf,
        WmfPlaceable,
        Emf,
        EmfPlusOnly,
        EmfPlusDual
    }

    export interface MetaHeader {
        Type: number;
        HeaderSize: number;
        Version: number;
        Size: number;
        NoObjects: number;
        MaxRecord: number;
        NoParameters: number;
    }

    enum PaletteFlags {
        HasAlpha,
        GrayScale,
        Halftone
    }

    enum PixelFormat {
        Undefined,
        DontCare,
        Max,
        Indexed,
        Gdi,
        Format16bppRgb555,
        Format16bppRgb565,
        Format24bppRgb,
        Format32bppRgb,
        Format1bppIndexed,
        Format4bppIndexed,
        Format8bppIndexed,
        Alpha,
        Format16bppArgb1555,
        PAlpha,
        Format32bppPArgb,
        Extended,
        Format16bppGrayScale,
        Format48bppRgb,
        Format64bppPArgb,
        Canonical,
        Format32bppArgb,
        Format64bppArgb
    }

    export interface PlayRecordCallback {
    }

    export interface PropertyItem {
        Id: number;
        Len: number;
        Type: number;
        Value: any;
    }

    export interface WmfPlaceableFileHeader {
        Key: number;
        Hmf: number;
        BboxLeft: number;
        BboxTop: number;
        BboxRight: number;
        BboxBottom: number;
        Inch: number;
        Reserved: number;
        Checksum: number;
    }

}
declare module System.Drawing.Internal {

    export interface ISystemColorTracker {
    }

}
declare module System.Drawing.Printing {

    enum Duplex {
        Default,
        Simplex,
        Vertical,
        Horizontal
    }

    export interface InvalidPrinterException {
    }

    export interface Margins {
        Left: number;
        Right: number;
        Top: number;
        Bottom: number;
        DoubleLeft: number;
        DoubleRight: number;
        DoubleTop: number;
        DoubleBottom: number;
    }

    export interface MarginsConverter {
    }

    export interface PageSettings {
        Bounds: System.Drawing.Rectangle;
        Color: boolean;
        HardMarginX: number;
        HardMarginY: number;
        Landscape: boolean;
        Margins: System.Drawing.Printing.Margins;
        PaperSize: System.Drawing.Printing.PaperSize;
        PaperSource: System.Drawing.Printing.PaperSource;
        PrintableArea: System.Drawing.RectangleF;
        PrinterResolution: System.Drawing.Printing.PrinterResolution;
        PrinterSettings: System.Drawing.Printing.PrinterSettings;
        ExtraBytes: number;
    }

    enum PaperKind {
        Custom,
        Letter,
        LetterSmall,
        Tabloid,
        Ledger,
        Legal,
        Statement,
        Executive,
        A3,
        A4,
        A4Small,
        A5,
        B4,
        B5,
        Folio,
        Quarto,
        Standard10x14,
        Standard11x17,
        Note,
        Number9Envelope,
        Number10Envelope,
        Number11Envelope,
        Number12Envelope,
        Number14Envelope,
        CSheet,
        DSheet,
        ESheet,
        DLEnvelope,
        C5Envelope,
        C3Envelope,
        C4Envelope,
        C6Envelope,
        C65Envelope,
        B4Envelope,
        B5Envelope,
        B6Envelope,
        ItalyEnvelope,
        MonarchEnvelope,
        PersonalEnvelope,
        USStandardFanfold,
        GermanStandardFanfold,
        GermanLegalFanfold,
        IsoB4,
        JapanesePostcard,
        Standard9x11,
        Standard10x11,
        Standard15x11,
        InviteEnvelope,
        LetterExtra,
        LegalExtra,
        TabloidExtra,
        A4Extra,
        LetterTransverse,
        A4Transverse,
        LetterExtraTransverse,
        APlus,
        BPlus,
        LetterPlus,
        A4Plus,
        A5Transverse,
        B5Transverse,
        A3Extra,
        A5Extra,
        B5Extra,
        A2,
        A3Transverse,
        A3ExtraTransverse,
        JapaneseDoublePostcard,
        A6,
        JapaneseEnvelopeKakuNumber2,
        JapaneseEnvelopeKakuNumber3,
        JapaneseEnvelopeChouNumber3,
        JapaneseEnvelopeChouNumber4,
        LetterRotated,
        A3Rotated,
        A4Rotated,
        A5Rotated,
        B4JisRotated,
        B5JisRotated,
        JapanesePostcardRotated,
        JapaneseDoublePostcardRotated,
        A6Rotated,
        JapaneseEnvelopeKakuNumber2Rotated,
        JapaneseEnvelopeKakuNumber3Rotated,
        JapaneseEnvelopeChouNumber3Rotated,
        JapaneseEnvelopeChouNumber4Rotated,
        B6Jis,
        B6JisRotated,
        Standard12x11,
        JapaneseEnvelopeYouNumber4,
        JapaneseEnvelopeYouNumber4Rotated,
        Prc16K,
        Prc32K,
        Prc32KBig,
        PrcEnvelopeNumber1,
        PrcEnvelopeNumber2,
        PrcEnvelopeNumber3,
        PrcEnvelopeNumber4,
        PrcEnvelopeNumber5,
        PrcEnvelopeNumber6,
        PrcEnvelopeNumber7,
        PrcEnvelopeNumber8,
        PrcEnvelopeNumber9,
        PrcEnvelopeNumber10,
        Prc16KRotated,
        Prc32KRotated,
        Prc32KBigRotated,
        PrcEnvelopeNumber1Rotated,
        PrcEnvelopeNumber2Rotated,
        PrcEnvelopeNumber3Rotated,
        PrcEnvelopeNumber4Rotated,
        PrcEnvelopeNumber5Rotated,
        PrcEnvelopeNumber6Rotated,
        PrcEnvelopeNumber7Rotated,
        PrcEnvelopeNumber8Rotated,
        PrcEnvelopeNumber9Rotated,
        PrcEnvelopeNumber10Rotated
    }

    export interface PaperSize {
        Height: number;
        Kind: System.Drawing.Printing.PaperKind;
        PaperName: string;
        RawKind: number;
        Width: number;
    }

    export interface PaperSource {
        Kind: System.Drawing.Printing.PaperSourceKind;
        RawKind: number;
        SourceName: string;
    }

    enum PaperSourceKind {
        Upper,
        Lower,
        Middle,
        Manual,
        Envelope,
        ManualFeed,
        AutomaticFeed,
        TractorFeed,
        SmallFormat,
        LargeFormat,
        LargeCapacity,
        Cassette,
        FormSource,
        Custom
    }

    export interface PreviewPageInfo {
        Image: System.Drawing.Image;
        PhysicalSize: System.Drawing.Size;
    }

    export interface PreviewPrintController {
        IsPreview: boolean;
        UseAntiAlias: boolean;
    }

    enum PrintAction {
        PrintToFile,
        PrintToPreview,
        PrintToPrinter
    }

    export interface PrintController {
        IsPreview: boolean;
    }

    export interface PrintDocument {
        DefaultPageSettings: System.Drawing.Printing.PageSettings;
        DocumentName: string;
        OriginAtMargins: boolean;
        PrintController: System.Drawing.Printing.PrintController;
        PrinterSettings: System.Drawing.Printing.PrinterSettings;
    }

    export interface PrinterResolution {
        Kind: System.Drawing.Printing.PrinterResolutionKind;
        X: number;
        Y: number;
    }

    enum PrinterResolutionKind {
        High,
        Medium,
        Low,
        Draft,
        Custom
    }

    export interface PrinterSettings {
        CanDuplex: boolean;
        Copies: number;
        Collate: boolean;
        DefaultPageSettings: System.Drawing.Printing.PageSettings;
        DriverName: string;
        Duplex: System.Drawing.Printing.Duplex;
        FromPage: number;
        InstalledPrinters: any; // System.Drawing.Printing.PrinterSettings_StringCollection
        IsDefaultPrinter: boolean;
        IsPlotter: boolean;
        IsValid: boolean;
        LandscapeAngle: number;
        MaximumCopies: number;
        MaximumPage: number;
        MinimumPage: number;
        OutputPort: string;
        PrintFileName: string;
        PaperSizes: System.Drawing.Printing.PrinterSettings_PaperSizeCollection;
        PaperSources: any; // System.Drawing.Printing.PrinterSettings_PaperSourceCollection
        PrintDialogDisplayed: boolean;
        PrintRange: any; // System.Drawing.Printing.PrintRange
        PrintToFile: boolean;
        PrinterName: string;
        PrinterNameInternal: string;
        PrinterResolutions: any; // System.Drawing.Printing.PrinterSettings_PrinterResolutionCollection
        SupportsColor: boolean;
        ToPage: number;
    }

    export interface PrinterSettings_PaperSizeCollection {
        Count: number;
        Item: System.Drawing.Printing.PaperSize;
    }

    export interface PrinterSettings_PaperSourceCollection {
        Count: number;
        Item: System.Drawing.Printing.PaperSource;
    }

    export interface PrinterSettings_PrinterResolutionCollection {
        Count: number;
        Item: System.Drawing.Printing.PrinterResolution;
    }

    export interface PrinterSettings_StringCollection {
        Count: number;
        Item: string;
    }

    enum PrinterUnit {
        Display,
        ThousandthsOfAnInch,
        HundredthsOfAMillimeter,
        TenthsOfAMillimeter
    }

    export interface PrinterUnitConvert {
    }

    export interface PrintEventArgs {
        PrintAction: System.Drawing.Printing.PrintAction;
    }

    export interface PrintEventHandler {
    }

    export interface PrintingPermission extends System.Security.Permissions.IUnrestrictedPermission {
        Level: System.Drawing.Printing.PrintingPermissionLevel;
    }

    export interface PrintingPermissionAttribute {
        Level: System.Drawing.Printing.PrintingPermissionLevel;
    }

    enum PrintingPermissionLevel {
        NoPrinting,
        SafePrinting,
        DefaultPrinting,
        AllPrinting
    }

    export interface PrintPageEventArgs {
        Cancel: boolean;
        Graphics: System.Drawing.Graphics;
        HasMorePages: boolean;
        MarginBounds: System.Drawing.Rectangle;
        PageBounds: System.Drawing.Rectangle;
        PageSettings: System.Drawing.Printing.PageSettings;
    }

    export interface PrintPageEventHandler {
    }

    enum PrintRange {
        AllPages,
        Selection,
        SomePages,
        CurrentPage
    }

    export interface QueryPageSettingsEventArgs {
        PageSettings: System.Drawing.Printing.PageSettings;
    }

    export interface QueryPageSettingsEventHandler {
    }

    export interface StandardPrintController {
    }

}
declare module System.Drawing.Text {

    export interface FontCollection {
        Families: System.Drawing.FontFamily[];
    }

    enum GenericFontFamilies {
        Serif,
        SansSerif,
        Monospace
    }

    enum HotkeyPrefix {
        None,
        Show,
        Hide
    }

    export interface InstalledFontCollection {
    }

    export interface PrivateFontCollection {
    }

    enum TextRenderingHint {
        SystemDefault,
        SingleBitPerPixelGridFit,
        SingleBitPerPixel,
        AntiAliasGridFit,
        AntiAlias,
        ClearTypeGridFit
    }

}

